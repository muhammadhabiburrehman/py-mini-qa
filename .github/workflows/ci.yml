name: CI with Local SonarQube
on:
  pull_request:
  workflow_dispatch:  # This enables manual triggering
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: false
        default: 'main'
        type: string

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Use the input branch if manually triggered, otherwise use default behavior
          ref: ${{ github.event.inputs.branch || github.ref }}
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests with coverage
        run: pytest --cov=app --cov-report=xml --cov-report=term-missing
        
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master  # Use master - most stable for this action
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Added for better integration
          
      - name: SonarQube Quality Gate
        id: qg
        uses: SonarSource/sonarqube-quality-gate-action@master  # Use master for this action
        timeout-minutes: 5  # Add timeout to prevent hanging
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}